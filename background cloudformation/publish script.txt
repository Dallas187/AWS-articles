# >>>>>>>>>>>>>>>>>>>>  Run powershell below to create deployment zip file

# Compiles the sources in the passed in directory into a deployment package and puts that into a zip file.
# Returns the name of the zip file. That name is based on the passed in version. It will be <tempdir>\<version>.zip
Function create-deployment-file([string]$sourceDir, [string]$version)
{
# Build the package and put the deployment files in a temporary directory
$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()
msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=$tempDir\Release.zip /p:AutoParameterizationWebConfigConnectionStrings=False

# Zip the deployment files into a single zip file. Do not use compression, because the package created by msbuild
# is a big .zip file itself plus some smaller files.
$zipFile = $env:temp + '\0.1500.zip'
If (Test-Path $zipFile) { Remove-Item $zipFile }
Add-Type -Assembly "System.IO.Compression.FileSystem" ;
[System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $zipFile, [System.IO.Compression.CompressionLevel]::NoCompression, $false);

# Remove the temp dir and everything in it
Get-ChildItem $tempDir -Recurse | Remove-Item -force -Recurse


	Return [System.Environment]::ExpandEnvironmentVariables($webSitePhysicalPath).Trim()
}


# ==============================

d:
cd "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb"

$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()
msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=$tempDir\Release.zip /p:AutoParameterizationWebConfigConnectionStrings=False

# Zip the deployment files into a single zip file. Do not use compression, because the package created by msbuild
# is a big .zip file itself plus some smaller files.
$zipFile = $env:temp + '\0.1500.zip'
If (Test-Path $zipFile) { Remove-Item $zipFile }
Add-Type -Assembly "System.IO.Compression.FileSystem" ;
[System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $zipFile, [System.IO.Compression.CompressionLevel]::NoCompression, $false);

# Remove the temp dir and everything in it
Get-ChildItem $tempDir -Recurse | Remove-Item -force -Recurse

# ==============================
# no separate zipping

Function exists-bucket([string]$bucketName)
{
	Return (Get-S3Bucket -BucketName $bucketName | measure).Count -ne 0
}

Function upload-bucket([string]$bucketName, [string]$filePath, [string]$keyName)
{
	if (!(exists-bucket($bucketName))) { New-S3Bucket -BucketName $bucketName }
	Write-S3Object -BucketName $bucketName -Key "$keyName" -File $filePath
}

# d:
# cd "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb"

$csProjPath = "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb\SimpleSiteWithDb.csproj"
$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()
$releaseZip = "$tempDir\Release.zip"

msbuild $csProjPath /t:Package /p:Configuration=Release /p:PackageLocation=$releaseZip /p:AutoParameterizationWebConfigConnectionStrings=False

# Zip the deployment files into a single zip file. Do not use compression, because the package created by msbuild
# is a big .zip file itself plus some smaller files.
# $zipFile = $env:temp + '\0.1500.zip'
# If (Test-Path $zipFile) { Remove-Item $zipFile }
# Add-Type -Assembly "System.IO.Compression.FileSystem" ;
# [System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $zipFile, [System.IO.Compression.CompressionLevel]::NoCompression, $false);

# Specify that commands in this script will use credentials from credential store "teamcity" and apply to us-east-1
# See http://docs.aws.amazon.com/powershell/latest/userguide/specifying-your-aws-credentials.html
Initialize-AWSDefaults -ProfileName teamcity -Region us-east-1




# Remove the temp dir and everything in it
Get-ChildItem $tempDir -Recurse | Remove-Item -force -Recurse


# ==============================
# no separate zipping

Function exists-bucket([string]$bucketName)
{
	Return (Get-S3Bucket -BucketName $bucketName | measure).Count -ne 0
}

Function upload-bucket([string]$bucketName, [string]$filePath, [string]$keyName)
{
	if (!(exists-bucket($bucketName))) { New-S3Bucket -BucketName $bucketName }
	Write-S3Object -BucketName $bucketName -Key "$keyName" -File $filePath
}

# $csProjPath - path to the csproj file of the web site to be deployed
# $version - version of the web site
# $bucketName - S3 bucket where the deployment files will be stored
Function upload-deployment([string]$csProjPath, [string]$version, [string]$bucketName)
{
	$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()
	$releaseZip = "$tempDir\Release.zip"

	msbuild $csProjPath /t:Package /p:Configuration=Release /p:PackageLocation=$releaseZip /p:AutoParameterizationWebConfigConnectionStrings=False

	# Specify that commands in this script will use credentials from credential store "teamcity" and apply to us-east-1
	# See http://docs.aws.amazon.com/powershell/latest/userguide/specifying-your-aws-credentials.html
	Initialize-AWSDefaults -ProfileName teamcity -Region us-east-1

	# Upload deployment file to S3 bucket where it will be picked up by CloudFormation template
	upload-bucket $bucketName $releaseZip $version

	# Remove the temp dir and everything in it
	Get-ChildItem $tempDir -Recurse | Remove-Item -force -Recurse
}

$csProjPath = "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb\SimpleSiteWithDb.csproj"
$version = "1.34"
$bucketName = "mperdeck-releases"
upload-deployment $csProjPath $version $bucketName

