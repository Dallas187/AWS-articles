Do not have a scaling group wait for init of the first instance. It will only start the first instance after it received the signal (deadlock)
http://stackoverflow.com/questions/21721397/cloudformation-error-waitcondition-timed-out-received-0-conditions-when-expect
============================
To create a database (rds) with multi-az:
* do not set multi-az in the template - you will get an error and rollback even if you set the option group
* before you run the template, create an option group with mirroring
* Assign that option group to the db instance. That in itself will make it multi-az!
========================================
========================================
http://www.ipaddressguide.com/cidr#range


d:
cd "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb"
Remove-Item d:\temp\test2.8.0\* -Force -Recurse
#Get-ChildItem -Path d:\temp\test2.8.0 -Recurse | Remove-Item -force -recurse

msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=d:\temp\test2.8.0\SimpleSiteWithDb\SimpleSiteWithDb.zip /p:AutoParameterizationWebConfigConnectionStrings=False
# msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=. /p:AutoParameterizationWebConfigConnectionStrings=False
****************



copy \\tsclient\C\Users\mperdeck\AppData\Local\Temp\0.1500.zip C:\Users\Administrator\AppData\Local\Temp\2





>>>>>>>>>>>>>>>>>>>>  Run powershell below to create deployment zip file

d:
cd "D:\Dev\AWS-articles\SimpleSiteWithDb\SimpleSiteWithDb"
$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()
$tempDir 

Remove-Item d:\temp\test2.8.0\* -Force -Recurse
#Get-ChildItem -Path d:\temp\test2.8.0 -Recurse | Remove-Item -force -recurse

msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=$tempDir\Release.zip /p:AutoParameterizationWebConfigConnectionStrings=False

# Put resulting deployment files in a single zip file
$zipFile = $env:temp + '\0.1500.zip'
Add-Type -Assembly "System.IO.Compression.FileSystem" ;
[System.IO.Compression.ZipFile]::CreateFromDirectory($tempDir, $zipFile, [System.IO.Compression.CompressionLevel]::NoCompression, $false);

Remove-Item $tempDir -Force -Recurse
*****************


msbuild SimpleSiteWithDb.csproj /t:Package /p:Configuration=Release /p:PackageLocation=d:\temp\test2.8.0\SimpleSiteWithDb\SimpleSiteWithDb.zip /p:AutoParameterizationWebConfigConnectionStrings=False



{[System.DateTime]::Now}
[System.DateTime]::Now.ToString("yyyy-MM-dd")


-----------------
# Create .net 4 app pool and assign to default web site
d:
cd "D:\temp\test2.8.0\SimpleSiteWithDb" 

# Stop the Default Web Site
stop-website -name "Default Web Site"

# Give it an application pool that runs .Net 4.0
New-WebAppPool "v4.0" -force 
Set-ItemProperty "IIS:\AppPools\v4.0" managedRuntimeVersion "v4.0"
Set-ItemProperty 'IIS:\Sites\Default Web Site' ApplicationPool "v4.0"

############## wait unitl web site stopped. Then wipe its files
do { Start-Sleep -m 50; $defaultWebSiteState = Get-ItemProperty 'IIS:\Sites\Default Web Site' State } while ($defaultWebSiteState.Value -ne "Stopped")

# remove all files from the Default Web Site
$physicalPath = Get-ItemProperty 'IIS:\Sites\Default Web Site' physicalPath
Remove-Item $physicalPath\* -recurse

# Find the .cmd file and execute it.
$x = Get-ChildItem -Path . -Filter *.cmd
CMD /C $x /Y  "-setParam:kind=TextFile,scope=\\web.config$,match=@@DbServer@@,value='xxx yyy zz-----z' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUsername@@,value='xxx yyy z----zz2aaa' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbPassword@@,value='xxx yyy zzz----3aaaaa' -setparam:name='IIS Web Application Name',kind=providerpath,scope=apphostconfig,value='default web site'"

start-website -name "Default Web Site"
*********************************************************************************************************
>>>>>>>>>>>>>>>>> Run code below during deploy to deploy the files out of the zip file from the bucket
using appcmd rather than nice powershell commands, because the pwoershell commands require
the module 'WebAdministration' to be loaded.


add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\webserver_addrole.log
add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\mgmttools_addrole.log

# Assuming that 0.1500.zip is in temp dir
$zipFile = $env:temp + '\0.1500.zip'
$tempDir = $env:temp + '\' + [system.guid]::newguid().tostring()

Add-Type -Assembly "System.IO.Compression.FileSystem" ;
[System.IO.Compression.ZipFile]::ExtractToDirectory($zipFile, $tempDir) ;

# Create .net 4 app pool and assign to default web site
cd $tempDir 

# Stop the Default Web Site
cmd /c %systemroot%\system32\inetsrv\appcmd stop site /site.name:"Default Web Site"

# Give it an application pool that runs .Net 4.0
cmd /c %systemroot%\system32\inetsrv\appcmd add apppool /name:"v4.0" /managedRuntimeVersion:"v4.0" /managedPipelineMode:Integrated
Set-ItemProperty 'IIS:\Sites\Default Web Site' ApplicationPool "v4.0"

############## wait unitl web site stopped. Then wipe its files
do { Start-Sleep -m 50; $defaultWebSiteState = Get-ItemProperty 'IIS:\Sites\Default Web Site' State } while ($defaultWebSiteState.Value -ne "Stopped")

# remove all files from the Default Web Site
$physicalPath = Get-ItemProperty 'IIS:\Sites\Default Web Site' physicalPath
$physicalPath = [System.Environment]::ExpandEnvironmentVariables("$physicalPath") + '\*'
Remove-Item $physicalPath -recurse

# Deploy the files to the root directory of the Default Web Site
CMD /C release.deploy.cmd /Y  "-setParam:kind=TextFile,scope=\\web.config$,match=@@DbServer@@,value='xxx yyy zz-----z' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUsername@@,value='xxx yyy z----zz2aaa' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbPassword@@,value='xxx yyy zzz----3aaaaa' -setparam:name='IIS Web Application Name',kind=providerpath,scope=apphostconfig,value='default web site'"

# Start the Default Web Site
start-website -name "Default Web Site"
cmd /c %systemroot%\system32\inetsrv\appcmd start site /site.name:"Default Web Site"

# clean up
cd $env:temp
Remove-Item $zipFile
Remove-Item $tempDir -recurse




-------------------



invoke-item "SimpleSiteWithDb.deploy.cmd /Y  ""-setParam:kind=TextFile,scope=\\web.config$,match=@@DbServer@@,value='xxx yyy zzz' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUsername@@,value='xxx yyy zzz2' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbPassword@@,value='xxx yyy zzz3'"""
SimpleSiteWithDb.deploy.cmd /Y

$defaultWebSite = Get-Website -name "Default Web Site"
$defaultWebSite | Get-Member



$physicalPath = Get-ItemProperty 'IIS:\Sites\Default Web Site' physicalPath
Remove-Item $physicalPath\* -recurse
$physicalPath


Get-ItemProperty 'IIS:\Sites\Default Web Site' State


$defaultWebSiteState = Get-ItemProperty 'IIS:\Sites\Default Web Site' State
$defaultWebSiteState  | Get-Member
$defaultWebSiteState.Value
$defaultWebSiteState.Value -ne "Stopped"


 } while ("Stopped" -eq ())


$defaultWebSite = Get-Website -name "Default Web Site"
$physicalPath = $defaultWebSite.physicalPath
$physicalPath



+++++++++++++++++++++++++++++++++++++++++
d:
cd "D:\temp\test2.8.0\SimpleSiteWithDb"
SimpleSiteWithDb.deploy.cmd /Y "-setParam:kind=XmlFile,scope=\\web.config$,match=/configuration/appSettings/add[@name='UnobtrusiveJavaScriptEnabled']/@value,value='xxx yyy zzz00' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbServer@@,value='xxx yyy zzz' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUsername@@,value='xxx yyy zzz2' -setParam:kind=TextFile,scope=\\web.config$,match=@@DbPassword@@,value='xxx yyy zzz3'"



 -dest:dirPath=D:\temp\test2.8.0\site
 
 
 
d:
cd "D:\temp\test2.8.0\SimpleSiteWithDb"
SimpleSiteWithDb.deploy.cmd /T "-setParam:@@DbServer@@='xxx yyy zzz' -setParam:@@DbUsername@@='xxx yyy zzz2' -setParam:@@DbUserPassword@@='xxx yyy zzz3'"


d:
cd "D:\temp\test2.8.0\SimpleSiteWithDb"
SimpleSiteWithDb.deploy.cmd /T -setParam:kind=XmlFile,scope=\\web.config$,match=/configuration/appSettings/add[@name='UnobtrusiveJavaScriptEnabled']/@value,value="xxx yyy zzz" -setParam:kind=TextFile,scope=\\web.config$,match=@@DbServer@@,value="xxx yyy zzz" -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUsername@@,value="xxx yyy zzz2" -setParam:kind=TextFile,scope=\\web.config$,match=@@DbUserPassword@@,value="xxx yyy zzz3"




d:
cd "D:\temp\test2.8.0\SimpleSiteWithDb"
SimpleSiteWithDb.deploy.cmd /T -setParam:kind=XmlFile,scope=\\web.config$,match=/configuration/connectionStrings/add[@name='BookStoreConnectionString']/@connectionString,value=c:\physicalDirectory


============================
db instances

dbinstance1
mperdeck
Morehits 1!

=============================
-- Create .net 4 app pool and assign to default web site
New-WebAppPool "v4.0" -force 
Set-ItemProperty "IIS:\AppPools\v4.0" managedRuntimeVersion "v4.0"
Set-ItemProperty 'IIS:\Sites\Default Web Site' ApplicationPool "v4.0"



Set-ItemProperty "IIS:\Sites\Default Web Site" -name physicalPath -value "C:\blah\Web"
Set-ItemProperty IIS:\Sites\Staging -name physicalPath  -value "C:\blah\Web"



$s = "Default Web Site"
$x = @"
<?xml version="1.0" encoding="utf-8"?>
<parameters>
  <setParameter name="IIS Web Application Name" value="$s" />
</parameters>
"@

$x | Out-File SimpleSiteWithDb.SetParameters.xml




<?xml version="1.0" encoding="utf-8"?>
<parameters>
  <setParameter name="IIS Web Application Name" value="Default Web Site" />
</parameters>

$s = "Default Web Site"
$x = @"
<?xml version="1.0" encoding="utf-8"?>
<parameters>
  <setParameter name="IIS Web Application Name" value="$s" />
</parameters>
"@
$x | Out-File SimpleSiteWithDb.SetParameters.xml


-----------------------
Set-ExecutionPolicy Unrestricted
y
import-module webadministration
-----------------------







==============
add-windowsfeature web-webserver -includeallsubfeature -logpath $env:temp\webserver_addrole.log
add-windowsfeature web-mgmt-tools -includeallsubfeature -logpath $env:temp\mgmttools_addrole.log

New-WebAppPool "v4.5" -force
Set-ItemProperty "IIS:\AppPools\v4.5" managedRuntimeVersion "v4.5"
================

Restart-WebAppPool "v4.5"



================
new-website -name Test -port 80 -physicalpath c:\inetpub\Test -ApplicationPool "v4.5" -force
remove-website -name "Default Web Site"
start-WebAppPool "v4.5"
start-website -name Test
================

			  
========================================

remove-windowsfeature web-webserver

=======================
New-WebAppPool "v4.5" -force
Set-ItemProperty "IIS:\AppPools\v4.5" managedRuntimeVersion "v4.5"

remove-website -name "Default Web Site"


Set-ItemProperty "IIS:\DefaultAppPool\Default Web Site" applicationPool "v4.5"
Set-ItemProperty "IIS:\DefaultAppPool\Default Web Site" physicalpath c:\inetpub\Test


	57000780
80070057 

The worker process failed to initialize correctly and therefore could not be started.  The data is the error. 80070057 
++++++++++++++++++++++++++++++

			  "cfn-signal.exe -e 0 --stack ", {"Ref" : "AWS::StackId"}, " --resource WebServerGroup --region ", {"Ref" : "AWS::Region"}, "\n",

			  
			  


	